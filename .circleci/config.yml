version: 2.1

commands:
  install-awscli:
    description: Install awscli
    steps:
      - run:
          name: Install awscli
          command: |
            sudo apt update
            sudo apt-get install awscli
            sudo apt-get install gettext-base

  install-kubectl:
    description: Install kubectl
    steps:
      - run:
          name: Install kubectl
          command: |
            #curl -o kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.13.7/2019-06-11/bin/linux/amd64/kubectl
            curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.27.0/bin/linux/amd64/kubectl
            #curl -LO https://dl.k8s.io/release/v1.28.0/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            sudo mv ./kubectl /usr/local/bin/kubectl

  install-aws-iam:
    description: Install aws-iam
    steps:
      - run:
          name: Install aws-iam
          command: |
            curl -o aws-iam-authenticator curl -o aws-iam-authenticator \
              https://amazon-eks.s3-us-west-2.amazonaws.com/1.13.7/2019-06-11/bin/linux/amd64/aws-iam-authenticator
            chmod +x ./aws-iam-authenticator
            sudo mv ./aws-iam-authenticator /usr/local/bin/aws-iam-authenticator          

jobs:
  installing-dependencies:
    docker:
      - image: python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64
            chmod +x /bin/hadolint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint     

  build-image-and-push-to-docker-hub:
    docker:
      - image: cimg/node:13.8.0
    steps:
      - checkout
      - setup_remote_docker:
            version: 19.03.13
      - run:
          name: Build docker image
          command: |
            docker build --tag=capstoneproject .
            docker login -u ${username} -p ${password}
            docker tag capstoneproject ducnx1506/capstoneproject
            docker push ducnx1506/capstoneproject

  add-kubectl:
    docker:
      - image: cimg/python:3.7.13
    steps:
      - checkout
      - install-awscli
      - install-kubectl
      - run:
          name: Add kubectl
          command: |
            aws eks --region us-east-1 update-kubeconfig --name cluster-capstone-udacity
            kubectl config use-context arn:aws:eks:us-east-1:998518335649:cluster/cluster-capstone-udacity

  deploy-blue:
    docker:
      - image: cimg/python:3.7.13
    steps:
      - checkout
      - install-awscli
      - install-kubectl
      - run:
          name: Add kubectl
          command: |
            aws eks --region us-east-1 update-kubeconfig --name cluster-capstone-udacity
            kubectl apply -f ./deployment/blue-controller.json

  deploy-green:
    docker:
      - image: cimg/python:3.7.13
    steps:
      - checkout
      - install-awscli
      - install-kubectl
      - run:
          name: Add kubectl
          command: |
            aws eks --region us-east-1 update-kubeconfig --name cluster-capstone-udacity
            kubectl apply -f ./deployment/green-controller.json

  create-blue-service:
    docker:
      - image: cimg/python:3.7.13
    steps:
      - checkout
      - install-awscli
      - install-kubectl
      - run:
          name: Add kubectl
          command: |
            aws eks --region us-east-1 update-kubeconfig --name cluster-capstone-udacity
            kubectl apply -f ./deployment/blue-service.json

  user-accept:
    docker:
      - image: cimg/python:3.7.13
    steps:
      - checkout
      - run:
          name: Add kubectl
          command: |
            echo "Do you want to redirect traffic to green?"

  create-green-service:
    docker:
      - image: cimg/python:3.7.13
    steps:
      - checkout
      - install-awscli
      - install-kubectl
      - run:
          name: Add kubectl
          command: |
            aws eks --region us-east-1 update-kubeconfig --name cluster-capstone-udacity
            kubectl apply -f ./deployment/green-service.json

workflows:
  default:
    jobs:
      - installing-dependencies
      - build-image-and-push-to-docker-hub:
          requires: [installing-dependencies]
      - add-kubectl:
          requires: [build-image-and-push-to-docker-hub]
      - deploy-blue:
          requires: [add-kubectl]
      - deploy-green:
          requires: [deploy-blue]
      - create-blue-service:
          requires: [deploy-green]
      - user-accept:
          requires: [create-blue-service]
      - create-green-service:
          requires: [user-accept]